{"version":3,"file":"static/js/756.6a3ffdb1.chunk.js","mappings":"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","sources":["api/Api.js","hook/use-http.js","pages/form/login/Login.js"],"sourcesContent":["// const httpApi = 'https://credentials-8e9d4-default-rtdb.firebaseio.com';\r\n\r\nexport const signinCredentials = async (requestedData) => {\r\n    const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCNEtJN8ksVoDLGTRoPOrtiRQqbQn6ogn0', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            email: requestedData.email,\r\n            password: requestedData.password,\r\n            returnSecureToken: true\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\n    if (!response.ok) {\r\n        const data =  await response.json();\r\n        throw new Error(data.error.message);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport const loginCredentials = async (requestedData) => {\r\n    const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCNEtJN8ksVoDLGTRoPOrtiRQqbQn6ogn0', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            email: requestedData.email,\r\n            password: requestedData.password,\r\n            returnSecureToken: true\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\n    const data = await response.json();\r\n    \r\n    if (!response.ok) {\r\n        \r\n        if (data && data.error && data.error.message){\r\n            throw new Error(data.error.message);\r\n        }\r\n    }\r\n\r\n    return data;\r\n}","import { useReducer } from \"react\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst httpReducer = (state, action) => {\r\n\r\n    if (action.type === 'send') {\r\n        return { data: null, status: 'pending', error: null }\r\n    }\r\n    if (action.type === 'success') {\r\n        return { data: action.data, status: 'completed', error: null }\r\n    }\r\n    if (action.type === 'error') {\r\n        return { data: null, status: 'completed', error: action.error }\r\n    }\r\n    return state;\r\n}\r\n\r\nconst useHTTP = (fetchData, startWithPending = false) => {\r\n\r\n    const [httpdata, dispatch] = useReducer(httpReducer, {\r\n        data: null,\r\n        status: startWithPending ? 'pending' : null,\r\n        error: null\r\n    });\r\n\r\n    const sendRequest = useCallback(async (requestedData) => {\r\n        dispatch({ type: 'send' })\r\n        try {\r\n            const data = await fetchData(requestedData);\r\n            dispatch({ type: 'success', data });\r\n        }\r\n        catch (error) {\r\n            // console.log(error.message);\r\n            dispatch({ type: 'error', error: error.message || 'Something went wrong!!⚠️⚠️' });\r\n        }\r\n\r\n    }, [fetchData]);\r\n\r\n    return {\r\n        sendRequest,\r\n        ...httpdata\r\n    }\r\n}\r\n\r\nexport default useHTTP;","import { useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nimport { loginCredentials } from '../../../api/Api';\r\nimport LoadingSpinner from '../../../components/UI/LoadingSpinner';\r\n// import { useDispatch } from 'react-redux';\r\nimport useHTTP from '../../../hook/use-http';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiActions } from '../../../store/uiSlice';\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const {sendRequest, status, error} = useHTTP(loginCredentials);\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const inputEmail = useRef();\r\n    const inputPassword = useRef();\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        if(status === 'completed' && !error){\r\n            dispatch(uiActions.loginValidity());\r\n            history.push('/');\r\n        }\r\n    }, [status, error, history, dispatch]);\r\n\r\n\r\n    if(status === 'pending'){\r\n        return(\r\n            <div className=\"centered\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // if(error){\r\n    //     return(\r\n    //         <div className=\"centered\">\r\n    //             <h2>{error}</h2>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    const loginFormHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        sendRequest({email: inputEmail.current.value,password: inputPassword.current.value});\r\n\r\n        inputEmail.current.value = '';\r\n        inputPassword.current.value = '';\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"login_container\">\r\n                <div className=\"contact-box\">\r\n                    <div className=\"right\"></div>\r\n                    <div className=\"left\">\r\n                        <form onSubmit={loginFormHandler} action=\"login.php\" method=\"POST\" >\r\n                            <h2> Log In</h2>\r\n                            <p> Login and Enjoy Additional Features </p>&nbsp;\r\n                            <p> Create a New <span> <Link to={'/signup'}>Account</Link></span></p>\r\n                            <br />\r\n                            <input ref={inputEmail} type=\"text\" className=\"field\" name=\"email\" placeholder=\"Your Email\"required/>\r\n                            <input ref={inputPassword} type=\"password\" className=\"field\" name=\"password\" placeholder=\"Enter password\" required/>\r\n                            <button className=\"btn\">Login</button>\r\n                            {error && <p className='invalid_credentials'>{error}</p>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n     )\r\n};\r\n\r\nexport default Login;"],"names":["signinCredentials","requestedData","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","response","ok","json","data","Error","error","message","loginCredentials","httpReducer","state","action","type","status","fetchData","startWithPending","useReducer","httpdata","dispatch","sendRequest","useCallback","useHTTP","useDispatch","inputEmail","useRef","inputPassword","history","useHistory","useEffect","uiActions","push","className","LoadingSpinner","onSubmit","e","preventDefault","current","value","to","ref","name","placeholder","required"],"sourceRoot":""}